global proc float sum(float $numbers[]) 
{
    float $result = 0;
    for ($num in $numbers) {
        $result += $num;
    }
    return $result;
}

float $numberArray[] = {1.0, 2.0, 3.0, 4.0};
float $result = sum($numberArray);
print("The sum is: " + $result);

global proc float difference(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount < 2) {
        error "Subtraction requires at least 2 numbers.";
    }
    float $result = $numbers[0];
    for ($i = 1; $i < $numCount; $i++) {
        $result -= $numbers[$i];
    }
    return $result;
}

float $myNumbers[] = {5.0, 2.0, 1.0};
float $result = difference($myNumbers);
print("The difference is: " + $result);

global proc float multiplication(float $numbers[]) 
{
    float $result = 1;
    for ($num in $numbers) {
        $result *= $num;
    }
    return $result;
}

float $myNumbers[] = {2.0, 3.0, 4.0};
float $result = multiplication($myNumbers);
print("The product is: " + $result);

global proc float division(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount < 2) {
        error "Division requires at least 2 numbers.";
    }
    float $result = $numbers[0];
    for ($i = 1; $i < $numCount; $i++) {
        if ($numbers[$i] == 0) {
            error "Division by zero is not allowed.";
        }
        $result /= $numbers[$i];
    }
    return $result;
}

float $myNumbers[] = {10.0, 2.0, 5.0};
float $result = division($myNumbers);
print("The quotient is: " + $result);

global proc float power(float $base, int $exponent) 
{
    float $result = 1;
    for ($i = 0; $i < $exponent; $i++) {
        $result *= $base;
    }
    return $result;
}

float $base = 2.0;
int $exponent = 3;
float $result = power($base, $exponent);
print("The result is: " + $result);

global proc float mean(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount == 0) {
        error "Mean calculation requires at least 1 number.";
    }
    float $sum = sum($numbers);
    return $sum / float($numCount);
}

float $myNumbers[] = {3.0, 4.0, 5.0};
float $result = mean($myNumbers);
print("The mean is: " + $result);

global proc float median(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount == 0) {
        error "Median calculation requires at least 1 number.";
    }
    
    float $sortedNumbers[];
    for ($num in $numbers) {
        $sortedNumbers[size($sortedNumbers)] = $num;
    }
    
    for ($i = 0; $i < $numCount; $i++) {
        for ($j = $i + 1; $j < $numCount; $j++) {
            if ($sortedNumbers[$i] > $sortedNumbers[$j]) {
                float $temp = $sortedNumbers[$i];
                $sortedNumbers[$i] = $sortedNumbers[$j];
                $sortedNumbers[$j] = $temp;
            }
        }
    }
    
    if ($numCount % 2 == 1) {
        return $sortedNumbers[$numCount / 2];
    } else {
        int $mid = $numCount / 2;
        return ($sortedNumbers[$mid - 1] + $sortedNumbers[$mid]) / 2;
    }
}

float $myNumbers[] = {7.0, 2.0, 5.0, 8.0};
float $result = median($myNumbers);
print("The median is: " + $result);


