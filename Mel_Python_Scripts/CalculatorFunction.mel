global proc float sum(float $numbers[]) {
    float $result = 0;
    for ($num in $numbers) {
        $result += $num;
    }
    return $result;
}

global proc float difference(float $numbers[]) {
    float $result = $numbers[0];
    for ($i = 1; $i < size($numbers); $i++) {
        $result -= $numbers[$i];
    }
    return $result;
}

global proc float multiplication(float $numbers[]) {
    float $result = 1;
    for ($num in $numbers) {
        $result *= $num;
    }
    return $result;
}

global proc float division(float $numbers[]) {
    float $result = $numbers[0];
    for ($i = 1; $i < size($numbers); $i++) {
        if ($numbers[$i] != 0) {
            $result /= $numbers[$i];
        } else {
            error("Cannot divide by zero.");
        }
    }
    return $result;
}

global proc float power(float $base, int $exponent) {
    float $result = pow($base, $exponent);
    return $result;
}

global proc float mean(float $numbers[]) {
    float $sum = sum($numbers);
    float $result = $sum / size($numbers);
    return $result;
}

global proc float median(float $numbers[]) {
    int $count = size($numbers);
    float $sortedNumbers[] = sort($numbers);
    float $result;

    if ($count % 2 == 0) {
        // If even count, take the average of the middle two values
        int $middleIndex1 = ($count / 2) - 1;
        int $middleIndex2 = $count / 2;
        $result = ($sortedNumbers[$middleIndex1] + $sortedNumbers[$middleIndex2]) / 2.0;
    } else {
        // If odd count, take the middle value
        int $middleIndex = int($count / 2);
        $result = $sortedNumbers[$middleIndex];
    }

    return $result;
}

global proc calculator(float $input[], int $operation) 
{
    float $result;

    switch ($operation) {
        case 1:
            $result = sum($input);
            print("Sum of ", size($input), " numbers: ");
            break;
        case 2:
            $result = difference($input);
            print("Difference of ", size($input), " numbers: ");
            break;
        case 3:
            $result = multiplication($input);
            print("Multiplication of ", size($input), " numbers: ");
            break;
        case 4:
            $result = division($input);
            print("Division of ", size($input), " numbers: ");
            break;
        case 5:
            $result = power($input[0], $input[1]);
            print("Power: ", $input[0], "^", $input[1], " = ");
            break;
        case 6:
            $result = mean($input);
            print("Mean (Average) of ", size($input), " numbers: ");
            break;
        case 7:
            $result = median($input);
            print("Median of ", size($input), " numbers: ");
            break;
        default:
            error("Invalid operation type.");
    }

    print($result, "\n");
}

// Example usage:
float $numbers[] = {3, 5, 8};
int $operation = 1;  // Change the operation type as needed
calculator($numbers, $operation);

