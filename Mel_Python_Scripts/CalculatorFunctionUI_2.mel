global proc float sum(float $numbers[]) 
{
    float $result = 0;
    for ($num in $numbers) {
        $result += $num;
    }
    return $result;
}


global proc float difference(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount < 2) {
        error "Subtraction requires at least 2 numbers.";
    }
    float $result = $numbers[0];
    for ($i = 1; $i < $numCount; $i++) {
        $result -= $numbers[$i];
    }
    return $result;
}


global proc float multiplication(float $numbers[]) 
{
    float $result = 1;
    for ($num in $numbers) {
        $result *= $num;
    }
    return $result;
}

global proc float division(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount < 2) {
        error "Division requires at least 2 numbers.";
    }
    float $result = $numbers[0];
    for ($i = 1; $i < $numCount; $i++) {
        if ($numbers[$i] == 0) {
            error "Division by zero is not allowed.";
        }
        $result /= $numbers[$i];
    }
    return $result;
}

global proc float power(float $base, int $exponent) 
{
    float $result = 1;
    for ($i = 0; $i < $exponent; $i++) {
        $result *= $base;
    }
    return $result;
}

global proc float mean(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount == 0) {
        error "Mean calculation requires at least 1 number.";
    }
    float $sum = sum($numbers);
    return $sum / float($numCount);
}

global proc float median(float $numbers[]) 
{
    int $numCount = size($numbers);
    if ($numCount == 0) {
        error "Median calculation requires at least 1 number.";
    }
    
    float $sortedNumbers[];
    for ($num in $numbers) {
        $sortedNumbers[size($sortedNumbers)] = $num;
    }
    
    for ($i = 0; $i < $numCount; $i++) {
        for ($j = $i + 1; $j < $numCount; $j++) {
            if ($sortedNumbers[$i] > $sortedNumbers[$j]) {
                float $temp = $sortedNumbers[$i];
                $sortedNumbers[$i] = $sortedNumbers[$j];
                $sortedNumbers[$j] = $temp;
            }
        }
    }
    
    if ($numCount % 2 == 1) {
        return $sortedNumbers[$numCount / 2];
    } else {
        int $mid = $numCount / 2;
        return ($sortedNumbers[$mid - 1] + $sortedNumbers[$mid]) / 2;
    }
}

global proc float calculator(float $numbers[], string $operationType) 
{
    float $result = 0;
    
    // Convert the float array to a string manually
    string $numbersAsString = "";
    for ($num in $numbers) {
        $numbersAsString += ($num + ", ");
    }
    
    // Remove the trailing comma and space from the string
    if (size($numbersAsString) > 0) {
        $numbersAsString = substring($numbersAsString, 0, size($numbersAsString) - 2);
    }
    
    
    if ($operationType == "addition") {
        $result = sum($numbers);
        print("The sum of " + $numbersAsString + " is " + $result);
    } 
    else if ($operationType == "difference") {
        $result = difference($numbers);
        print("The difference of " + $numbersAsString + " is " + $result);
    } 
    else if ($operationType == "multiplication") {
        $result = multiplication($numbers);
        print("The product of " + $numbersAsString + " is " + $result);
    } 
    else if ($operationType == "division") {
        $result = division($numbers);
        print("The quotient of " + $numbersAsString + " is " + $result);
    } 
    else if ($operationType == "power") {
        
        if (size($numbers) != 2) {
            error "Power operation requires exactly 2 numbers.";
        }
        $result = power($numbers[0], int($numbers[1]));
        print($numbers[0] + " raised to the power of " + $numbers[1] + " is " + $result);
    } 
    else if ($operationType == "mean") {
        $result = mean($numbers);
        print("The mean of " + $numbersAsString + " is " + $result);
    } 
    else if ($operationType == "median") {
        $result = median($numbers);
        print("The median of " + $numbersAsString + " is " + $result);
    } 
    else {
        error("Invalid operation. Supported operations: addition, difference, multiplication, division, power, mean, median");
    }
    
    return $result;
}

// Example usage with a different variable name
float $inputNumbers[] = {3.0, 5.0, 8.0};
string $operationType = "addition";
calculator($inputNumbers, $operationType);





//float $result = 0;

//Calculator function
global proc performCalculation()
{
    
    float $number1 = `floatField -query -value numberField1`;
    float $number2 = `floatField -query -value numberField2`;
    float $number3 = `floatField -query -value numberField3`;

    
    float $inputNumbers[] = {$number1, $number2, $number3};

    string $operationType;

    
    string $selectedOperation = `optionMenu -query -value operationOptionMenu`;

    
    switch ($selectedOperation) {
        case "Addition":
            $operationType = "addition";
            break;
        case "Subtraction":
            $operationType = "difference";
            break;
        case "Multiplication":
            $operationType = "multiplication";
            break;
        case "Division":
            $operationType = "division";
            break;
        case "Power":
            $operationType = "power";
            break;
        case "Mean":
            $operationType = "mean";
            break;
        case "Median":
            $operationType = "median";
            break;
        default:
            error("No operation selected");
    }

    
    $result = calculator($inputNumbers, $operationType);

    
    textField -edit -text $result resultTextField;
}

// Create the main UI window
if (`window -exists calculatorWindow`) {
    deleteUI calculatorWindow;
}
window -title "Calculator" calculatorWindow;
columnLayout -adjustableColumn true;


text -label "Enter Numbers:";
text -label "Select Operation:";
text -label "Result:";


floatField -minValue -100 -maxValue 100 -value 0.0 -precision 2 numberField1;
floatField -minValue -100 -maxValue 100 -value 0.0 -precision 2 numberField2;
floatField -minValue -100 -maxValue 100 -value 0.0 -precision 2 numberField3;


optionMenu -label "Select Operation:" operationOptionMenu;
menuItem -label "Addition";
menuItem -label "Subtraction";
menuItem -label "Multiplication";
menuItem -label "Division";
menuItem -label "Power";
menuItem -label "Mean";
menuItem -label "Median";


textField -editable false -text "0.0" resultTextField;


button -label "Calculate" -command "performCalculation();";


showWindow calculatorWindow;
